{"name": "Создание сотрудника", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "@allure.title(\"Создание сотрудника\")\n    @allure.description(\"Проверяет создание нового сотрудника и его корректное отображение в API\")\n    @allure.feature(\"Сотрудники\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_create_employee():\n        with allure.step(\"Получение списка сотрудников из базы данных до создания\"):\n            db_result = db.get_list_employee(company_id)\n        with allure.step(\"Добавление нового сотрудника в базу данных\"):\n            db.add_new_employee(\"Гена\", \"Букин\", \"1234567890\", True, company_id)\n        with allure.step(\"Получение данных о новом сотруднике из API\"):\n>           data_employee = api.get_new_employee2(db.get_id_new_employee()).json()\n\nlesson9\\Test\\test_x_clients.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lesson9.Pages.DataBase.DbEmployee object at 0x0000020D1B667500>\n\n    def get_id_new_employee(self) -> int:\n        \"\"\"\n        Получает ID нового сотрудника.\n    \n        :return: ID нового сотрудника.\n        \"\"\"\n        with self.__db.connect() as connection:\n            result = connection.execute(self.scripts['id_new_employee'])\n>           db_new_employee = result.fetchone()[0]\nE           TypeError: 'NoneType' object is not subscriptable\n\nlesson9\\Pages\\DataBase.py:44: TypeError"}, "description": "Проверяет создание нового сотрудника и его корректное отображение в API", "steps": [{"name": "Получение списка сотрудников из базы данных до создания", "status": "passed", "start": 1724500102475, "stop": 1724500102666}, {"name": "Добавление нового сотрудника в базу данных", "status": "passed", "start": 1724500102666, "stop": 1724500102859}, {"name": "Получение данных о новом сотруднике из API", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable\n", "trace": "  File \"C:\\Users\\H1zhina\\Desktop\\python\\Automatatiom\\lesson9\\Test\\test_x_clients.py\", line 72, in test_create_employee\n    data_employee = api.get_new_employee2(db.get_id_new_employee()).json()\n                                          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\H1zhina\\Desktop\\python\\Automatatiom\\lesson9\\Pages\\DataBase.py\", line 44, in get_id_new_employee\n    db_new_employee = result.fetchone()[0]\n                      ~~~~~~~~~~~~~~~~~^^^\n"}, "start": 1724500102859, "stop": 1724500103049}], "start": 1724500102475, "stop": 1724500103050, "uuid": "61a11449-f977-47e4-abe2-592568a14c00", "historyId": "9e37564699da11e4280d1823ab4d78b5", "testCaseId": "9e37564699da11e4280d1823ab4d78b5", "fullName": "lesson9.Test.test_x_clients#test_create_employee", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Сотрудники"}, {"name": "parentSuite", "value": "lesson9.Test"}, {"name": "suite", "value": "test_x_clients"}, {"name": "host", "value": "DESKTOP-F4GKLN3"}, {"name": "thread", "value": "11664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson9.Test.test_x_clients"}]}